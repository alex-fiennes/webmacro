package shop.components;

import java.sql.*;
import java.util.MissingResourceException;
import org.webmacro.datatable.*;
import org.webmacro.as.ActionServlet;
import org.webmacro.as.Destroyed;

/**
 * A simple component that provides access to SQL database via JDBC 
 * using <TT>org.webmacro.datatable</TT> package.
 *
 * @author Petr Toman
 */
public class SimpleDbComponent {
    private ResultSetDataTable table;
    private String sql;
    private ConnectionManager cm;
    private String orderBy = "";
    private int pageSize = 5;
    private int skipRows = 0;
    private boolean hasMore;

    /**
     * Loads JDBC driver and reserves a connection.
     */
    public SimpleDbComponent(ActionServlet as, String name) {
        try {
            pageSize = Integer.parseInt(as.getProperty(name, "page.size"));
        } catch(NumberFormatException e) {
        } catch(MissingResourceException e) {}

        try {
            setSelect(as.getProperty(name, "sql.select"));
        } catch(MissingResourceException e) {}

        try {
            setOrderBy(as.getProperty(name, "sql.orderby"));
        } catch(MissingResourceException e) {}

        cm = (ConnectionManager) as.getComponent("jdbc", true);
    }

    /**
     * Loads data into table.
     */
    private void load() throws SQLException {
        Connection con = null;
        try {
            con = cm.getConnection();
            table = ResultSetDataTable.create(con, sql + orderBy, pageSize, skipRows);
            con.commit();
        } finally {
            if (con != null) con.close();
        }
    }

    /**
     * Set select statement.
     */
    public void setSelect(String sql) {
        skipRows = 0;
        this.sql = sql;
    }

    /**
     * Sets ordering.
     *
     * @param attribute which the result set is ordered by (null = no ordering)
     */
    public void setOrderBy(String attribute) {
       if (attribute == null) orderBy = "";
           else orderBy = " order by " + attribute;
    }

    /**
     * Scrolls to row of a given number.
     */
    public void gotoRow(int rowNumber) {
        if (rowNumber > 0) {
           skipRows = rowNumber;
        }
    }

    /**
     * Scroll to first page.
     */
    public void first() {
        skipRows = 0;
    }

    /**
     * Scroll to previous page.
     */
    public void prev() {
        skipRows -= pageSize;
        if (skipRows < 0) skipRows = 0;
    }

    /**
     * Scroll to next page.
     */
    public void next() {
        skipRows += pageSize;
    }

    /**
     * Scroll to last page.
     */
    public void last() throws SQLException {
        if (table == null) load();

        while(table.hasMore()) {
            skipRows += pageSize;
            load();
        }
    }

    /**
     * Sets page size.
     */
    public void setPageSize(int pageSize) {
        if (pageSize > 0) this.pageSize = pageSize;
    }

    /**
     * Returns table generated by select.
     */
    public DataTable getTable() throws SQLException {
        if (sql != null) load();

        if (table != null && table.getSize() == 0) {
            first();
            last();
        }

        return table;
    }
}
