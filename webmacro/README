                            WebMacro 0.97
                    -------------------------------
                    
This is a prelease of what WebMacro 1.0 is shaping up to be.  If you are
currently using WebMacro in a production environment, you should not upgrade
to this release.  However, if you're new to WebMacro or want to stay
bleeding-edge, feel free to upgrade.  


Changes in this Release
-----------------------

- New Context Tools:  $Math, $Variable, $Type, and $Text.  See the javadocs
for org.webmacro.MathTool, VariableTool, TypeTool, and TextTool for
usage information.

- the directives #encode, #escape, and #silence are disabled by default.
They are currently broken, and the same result can be acheived using the
$Text tool:
   $Text.URLEncode("Some String value here")
   $Text.HTMLEncode("Some <html> text here")
   
- numerous bug fixes to the parser

- tighter integration with the EvaluationExceptionHandler

- improved logging messages

- no API changes from recent 0.97a1 release


Recent Changes up to this Release
---------------------------------

- Refactor Broker to allow tighter integration with servlet containers -- load 
templates, property files from WAR file or servlet zone, log to servlet log;

- Pluggable cache manager interface -- use for resources, encodings, 
PropertyOperator?; multiple cache managers include VeryFastCache; expose cache
configuration parameters so administrators can tweak them

- Simplified configuration mechanism for Providers, Directives, Tools, Parsers

- Use broker to laod templates, property files

- Make LogFormat? configurable; allow logging to servlet log 

- Better error handling; filter exceptions through EvaluationExceptionHandler?, 
reset output when template evaluation throws so the user can see what happened

- CheckTemplate? tool, StreamTemplate? and TemplateDumper? tools

- ANT build support

- JUnit test framework

- More defaults so its harder to misconfigure WM

- performance enhancements

- Improved block syntax -- #if .. #else .. #endif

- Do arithmetic as int instead of long

- Allow access to .length field of arrays

- TemplatePath? is now optional; you can run WM with an empty .properties

- Load settings from system properties and web.xml as well as .properties



Potential Pitfalls While Ugrading
---------------------------------

1) WebMacro no longer requires a "WebMacro.properties" file (it is
completely optional).  WebMacro now has a "WebMacro.defaults" file that
is included in the .jar file.  This file is used as a base for WM's
configuration.  If you find you need to change values, simply create a 
"WebMacro.properties" file and include *only* the keys you need to change.
WM will combine these two files to form the final configuration.

This also means you don't need to configure a TemplatePath, so long as you
meet one of the following requirements:

   1) Using WM in standalone mode, your templates are accessible via the
   system CLASSPATH; or
   
   2) Subclassing WMServlet in a Servlet 2.0 environment (Apache/JServ), 
   your templates are available via your servlet container CLASSPATH; or
   
   3) Subclassing WMServlet in a Servlet 2.1+ environment (Turbine or Resin), 
   your templates are available in your "application directory".  Depending
   on your servlet engine, this could be your WEB-INF/ directory, or your 
   "htdocs" directory.

However, if you don't like WM doing this for you, you can simply add a
"TemplatePath: /path/to/templates" in your custom WebMacro.properties file.


2) This release of WebMacro uses Lane Sharman's Very Fast Cache (VFC) for
caching templates and other things used in the innards of WebMacro.  Make
sure to include "vfc.jar" in your classpath alongside "webmacro.jar"


3) If you are using WebMacro in standalone mode (ie, not subclassing
WMServlet), you are most likely using a FastWriter.  The signatures for
FastWriter's constructors have changed to include a Broker:
   public FastWriter(Broker broker, OutputStream out, String encoding)

Your code can be easily adjusted by simply passing in the Broker returned
from the getBroker() method of your WebMacro instance:
   FastWriter fw = new FastWriter (_wm.getBroker(), System.out, "UTF8");
    
    
4) If you are sublcassing WMServlet, your handle() method most likely
contains something like this at the end:
      ...
   Template t;
   try {
      t = getTemplate ("mytemplate.wm")   
   } catch (NotFoundExceptoin nfe) {
      System.err.println ("mytemplate.wm could not be found!");
   }
   
   return t;
   
the getTemplate() method of WMServlet now throws a ResourceException, instead
of a NotFoundException.  Simply change your catch block to catch the
ResourceException and you'll be just fine.


5) org.webmacro.Context now implements java.util.Map.  This change, although
it won't adversly affect how you use the Context object, will *require*
you to recompile all your classes that use org.webmacro.Context.  Sorry
for the inconvienence.


If you experience any problems or find any bugs, please send mail to
webmacro@lists.semiotek.com

EOF