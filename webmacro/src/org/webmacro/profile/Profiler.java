
package org.webmacro.profile;

/**
  * A Profiler is a data collector--you can use it to instrument your
  * code. The Profiler will pass information back to some kind of 
  * Profile collection point, where data about your application can
  * be tabulated and reported. 
  * <p>
  * Concurrency: A Profiler must not be shared between threads. It
  * must be called by a single thread only. If you spawn off a new 
  * thread you must give it its own Profiler. 
  */
public interface Profiler
{
   /**
     * Start timing an event called 'name'
     */
   public void startEvent(String name);

   /**
     * Stop timing the last event started
     */
   public void stopEvent();

   /**
     * Terminate profiling, releasing any resources allocated to 
     * this Profiler and forwarding any collected statistics back
     * to the ProfileSystem. It is expected that implementations 
     * will use this method to recycle the Profiler objects 
     * themselves for efficiency.
     */
   public void destroy();

   /**
     * Iterate through the ProfilerEvent objects that have been
     * generated by this Profiler.
     */
   public java.util.Iterator getEvents();

}
